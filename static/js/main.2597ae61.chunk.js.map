{"version":3,"sources":["components/modals/PersonInfoModal.module.css","components/content/PeopleTable.module.css","components/content/APIWarning.module.css","components/modals/DisplayPersonModal.module.css","components/layout/Header.module.css","components/content/PeopleHeader.module.css","components/content/PersonTableRow.module.css","App.module.css","components/content/Copyright.module.css","components/layout/Footer.module.css","http/urls.js","http/httpRead.js","http/httpDelete.js","components/content/AlertMsg.js","components/modals/DisplayPersonModal.js","http/httpCreate.js","http/httpUpdate.js","components/modals/PersonInfoModal.js","utils/utils.js","components/modals/DeletePersonModal.js","img/surprised-chipmunk.png","components/layout/Header.js","components/content/APIWarning.js","components/content/Copyright.js","components/layout/Footer.js","components/content/PeopleHeader.js","components/content/PeopleTable.js","components/content/PersonTableRow.js","http/httpIndex.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","avatarURL","readPerson","id","onReadOk","onReadWarning","onReadError","fetch","then","res","ok","json","status","message","user","catch","err","statusText","deletePerson","onDeleteOk","onDeleteWarning","onDeleteError","person","options","method","body","JSON","stringify","headers","AlertMsg","props","Alert","variant","DisplayPersonModal","Modal","show","onHide","animation","Header","closeButton","closeLabel","Title","Body","Badge","className","css","idBadge","src","avatar","profileImage","alt","personDetails","personName","fname","lname","username","Footer","Button","onClick","createPerson","firstName","lastName","email","onCreateOk","onCreateWarning","onCreateError","updatePerson","onUpdateOk","onUpdateWarning","onUpdateError","PersonInfoModal","useState","errors","setErrors","errorClass","error","length","invalidInput","onHttpError","setAlertMsgVariant","setAlertMsg","type","onHttpWarning","onHttpOk","getCurrentPeople","title","htmlFor","formControl","defaultValue","defaults","errorMsg","form","event","preventDefault","target","value","trim","errorsMap","test","validatePerson","Object","keys","personId","submitBtnLabel","DeletePersonModal","onSubmit","headerContent","titleIcon","chipmunk","APIWarning","apiWarnings","titleRow","warningIconContainer","warningIcon","warningTitle","Copyright","copyright","footer","PeopleHeader","Row","peopleHeaderRow","Col","contentTitle","addBtn","showAddModal","PeopleTable","Table","striped","peopleTable","idCol","firstnameCol","lastnameCol","emailCol","actionsCol","personRows","PersonTableRow","actionBtn","showProfileModal","showUpdateModal","showDeleteModal","getPeople","onGetOk","onGetError","data","App","alertMsg","alertMsgVariant","setPersonRows","origPeopleList","rows","reverse","map","useEffect","showAdd","setShowAdd","setPerson","showProfile","setShowProfile","showUpdate","setShowUpdate","showDelete","setShowDelete","Container","fluid","content","container","person_id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2597ae61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMsg\":\"PersonInfoModal_errorMsg__3H0hM\",\"formControl\":\"PersonInfoModal_formControl__3-5Js\",\"invalidInput\":\"PersonInfoModal_invalidInput__3f9qO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"peopleTable\":\"PeopleTable_peopleTable__QV_eR\",\"idCol\":\"PeopleTable_idCol__2kc6S\",\"firstnameCol\":\"PeopleTable_firstnameCol__17pBl\",\"lastnameCol\":\"PeopleTable_lastnameCol__3Bi_1\",\"emailCol\":\"PeopleTable_emailCol__2dvg3\",\"actionsCol\":\"PeopleTable_actionsCol__3WVfX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"apiWarnings\":\"APIWarning_apiWarnings__34-vp\",\"titleRow\":\"APIWarning_titleRow__20Wgj\",\"warningIconContainer\":\"APIWarning_warningIconContainer__2yv_j\",\"warningIcon\":\"APIWarning_warningIcon__1grEW\",\"warningTitle\":\"APIWarning_warningTitle__2l28a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"idBadge\":\"DisplayPersonModal_idBadge__Z5p5X\",\"profileImage\":\"DisplayPersonModal_profileImage__2_p1F\",\"personDetails\":\"DisplayPersonModal_personDetails__2mpKq\",\"personName\":\"DisplayPersonModal_personName__dMtYw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContent\":\"Header_headerContent__3qinn\",\"titleIcon\":\"Header_titleIcon__1B-X7\",\"title\":\"Header_title__1ZkuB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"peopleHeaderRow\":\"PeopleHeader_peopleHeaderRow__8fCNV\",\"contentTitle\":\"PeopleHeader_contentTitle__37wEG\",\"addBtn\":\"PeopleHeader_addBtn__1Bk3u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionBtn\":\"PersonTableRow_actionBtn__dXGV1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__1eWKM\",\"App\":\"App_App__3IzzO\",\"content\":\"App_content__3uxtB\",\"footer\":\"App_footer__2NaWM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"copyright\":\"Copyright_copyright__710dx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2Uma1\"};","export const indexURL  = 'https://www.mecallapi.com/api/users';\r\nexport const createURL = 'https://www.mecallapi.com/api/users/create';\r\nexport const readURL   = 'https://www.mecallapi.com/api/users/';        // Append {id}\r\nexport const updateURL = 'https://www.mecallapi.com/api/users/update';\r\nexport const deleteURL = 'https://www.mecallapi.com/api/users/delete';\r\nexport const avatarURL = 'https://www.mecallapi.com/users/cat.png';\r\n","import {readURL} from './urls';\r\n\r\nconst readPerson = (id, onReadOk, onReadWarning, onReadError) => {\r\n  fetch(readURL + `${id}`)\r\n    .then(res => {\r\n      if (!res.ok) { throw res }\r\n      return res.json()\r\n    })\r\n    .then(res => {\r\n      if (res.status === 'error') {\r\n        onReadWarning(`${res.message}`);\r\n      }\r\n      onReadOk(res.user);\r\n    })\r\n    .catch(err => { \r\n      onReadError(`${err.status}; ${err.statusText}`);\r\n    });\r\n}\r\n\r\nexport default readPerson;\r\n","import {deleteURL} from './urls';\r\n\r\nconst deletePerson = (id, onDeleteOk, onDeleteWarning, onDeleteError) => {\r\n  const person = {\r\n    \"id\": id\r\n\r\n  };\r\n  const options = {\r\n    method:  'DELETE',\r\n    body:    JSON.stringify(person),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  fetch(deleteURL, options)\r\n    .then(res => {\r\n      if (!res.ok) { throw res }\r\n      return res.json()\r\n    })\r\n    .then(res => {\r\n      if (res.status === 'error') {\r\n        onDeleteWarning(`${res.message}`);\r\n      }\r\n      onDeleteOk();\r\n    })\r\n    .catch(err => { \r\n      onDeleteError(`${err.status}; ${err.statusText}`);\r\n    });\r\n}\r\n\r\nexport default deletePerson;\r\n","import Alert from 'react-bootstrap/Alert';\r\n\r\nconst AlertMsg = (props) => {\r\n  return (\r\n    <>\r\n      { props.message && <Alert variant={props.variant}>{props.message}</Alert> }\r\n    </>\r\n  )\r\n}\r\n  \r\nexport default AlertMsg;\r\n","import Badge from \"react-bootstrap/Badge\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport css from './DisplayPersonModal.module.css';\r\n\r\nconst DisplayPersonModal = (props) => {\r\n  return (\r\n    <Modal show={props.show} onHide={props.onHide} animation={false}>\r\n      <Modal.Header closeButton closeLabel=''>\r\n        <Modal.Title>Profile</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Badge className={css.idBadge}> ID: {props.person.id} </Badge>\r\n        <img src={props.person.avatar} className={css.profileImage} alt=\"Profile\"></img>\r\n        <div className={`text-center ${css.personDetails}`}>\r\n          <p className={css.personName}>{props.person.fname} {props.person.lname}</p>\r\n          <p>{props.person.username}</p>\r\n        </div>  \r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );  \r\n}\r\n\r\nexport default DisplayPersonModal;\r\n","import {avatarURL, createURL} from './urls';\r\n\r\nconst createPerson = (firstName, lastName, email, onCreateOk, onCreateWarning, onCreateError) => {\r\n  const person = {\r\n    \"fname\":    firstName,\r\n    \"lname\":    lastName,\r\n    \"username\": email,   // In the mecallapi API, username and email are aliases of each other\r\n    \"email\":    email,\r\n    \"avatar\":   avatarURL,\r\n  };\r\n  const options = {\r\n    method:  'POST',\r\n    body:    JSON.stringify(person),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  fetch(createURL, options)\r\n    .then(res => {\r\n      if (!res.ok) { throw res }\r\n      return res.json()\r\n    })\r\n    .then(res => {\r\n      if (res.status === 'error') {\r\n        onCreateWarning(`${res.message}`);\r\n      }\r\n      onCreateOk();\r\n    })\r\n    .catch(err => { \r\n      onCreateError(`${err.status}; ${err.statusText}`);\r\n    });\r\n} \r\n\r\nexport default createPerson;\r\n","import {avatarURL, updateURL} from './urls';\r\n\r\nconst updatePerson = (firstName, lastName, email, id, onUpdateOk, onUpdateWarning, onUpdateError) => {\r\n  const person = {\r\n    \"id\":       id,\r\n    \"fname\":    firstName,\r\n    \"lname\":    lastName,\r\n    \"username\": email,   // In the mecallapi API, username and email are aliases of each other\r\n    \"email\":    email,\r\n    \"avatar\":   avatarURL\r\n  };\r\n  const options = {\r\n    method:  'PUT',\r\n    body:    JSON.stringify(person),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  fetch(updateURL, options)\r\n    .then(res => {\r\n      if (!res.ok) { throw res }\r\n      return res.json()\r\n    })\r\n    .then(res => {\r\n      if (res.status === 'error') {\r\n        onUpdateWarning(`${res.message}`);\r\n      }\r\n      onUpdateOk();\r\n    })\r\n    .catch(err => { \r\n      onUpdateError(`${err.status}; ${err.statusText}`);\r\n    });\r\n}\r\n\r\nexport default updatePerson;\r\n","import React, {useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport createPerson from '../../http/httpCreate';\r\nimport updatePerson from '../../http/httpUpdate';\r\nimport {validatePerson} from '../../utils/utils';\r\nimport css from './PersonInfoModal.module.css';\r\n\r\nconst PersonInfoModal = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const errorClass = error => {\r\n    return ((error && error.length > 0)? css.invalidInput : '');\r\n  };\r\n\r\n  const onHttpError = (message) => {\r\n    props.setAlertMsgVariant('danger');\r\n    props.setAlertMsg(`${props.type} -- Error ${message}; please try again later`);\r\n  }\r\n  const onHttpWarning = (message) => {\r\n    props.setAlertMsgVariant('warning');\r\n    props.setAlertMsg(`${props.type} -- ${message}`);\r\n  }\r\n  const onHttpOk = (message) => {\r\n    props.onHide();\r\n    props.getCurrentPeople();\r\n  }\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // We have the event, so React refs are not needed.\r\n    const firstName = event.target.form[0].value.trim();\r\n    const lastName = event.target.form[1].value.trim();\r\n    const email = event.target.form[2].value.trim();\r\n\r\n    const errorsMap = validatePerson(firstName, lastName, email);\r\n    setErrors(errorsMap);\r\n\r\n    if (Object.keys(errorsMap).length === 0) {\r\n      props.onHide();\r\n      if (props.type === 'UPDATE PROFILE') {\r\n        updatePerson(firstName, lastName, email, props.personId, onHttpOk, onHttpWarning, onHttpError);\r\n      } \r\n      else if (props.type === 'ADD PERSON') {\r\n        createPerson(firstName, lastName, email, onHttpOk, onHttpWarning, onHttpError);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={props.show} onHide={props.onHide} animation={false}>\r\n      <Modal.Header closeButton closeLabel=''>\r\n        <Modal.Title>{props.title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <form id=\"person-info-form\">\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"form-first-name\" className=\"form-label\">First Name</label>\r\n            <input type=\"text\" className={`form-control ${css.formControl} ${errorClass(errors.firstName)}`} \r\n                  id=\"form-first-name\" defaultValue={props.defaults.fname} />\r\n            {errors.firstName && <p className={css.errorMsg}>{errors.firstName}</p>}\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"form-last-name\" className=\"form-label\">Last name</label>\r\n            <input type=\"text\" className={`form-control ${css.formControl} ${errorClass(errors.lastName)}`}\r\n                  id=\"form-last-name\" defaultValue={props.defaults.lname} />\r\n            {errors.lastName && <p className={css.errorMsg}>{errors.lastName}</p>}\r\n          </div>                            \r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"form-email\" className=\"form-label\">Email address</label>\r\n            <input type=\"email\" className={`form-control ${css.formControl} ${errorClass(errors.email)}`} \r\n                  id=\"form-email\" defaultValue={props.defaults.email} />\r\n            {errors.email && <p className={css.errorMsg}>{errors.email}</p>}\r\n          </div>\r\n        </form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>Cancel</Button>\r\n        <Button variant=\"primary\" type=\"submit\" form=\"person-info-form\" onClick={onSubmit}>\r\n          {props.submitBtnLabel}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default PersonInfoModal;\r\n","export const validatePerson = (firstName, lastName, email) => {\r\n\r\n  const errors = {};\r\n\r\n  // A simplistic and incomplete email regex\r\n  const emailRegex = /^[A-Z0-9._%+-]+@([A-Z0-9-]+\\.)+[A-Z]{2,20}$/i;\r\n\r\n  if (firstName === '' ) {\r\n    errors.firstName = \"First name is required.\"\r\n  } \r\n  if (lastName === '' ) {\r\n    errors.lastName = 'Last name is required'; \r\n  } \r\n  if (email === '' ) {\r\n      errors.email = 'Email address is required';\r\n  } \r\n  if (email !== '' && !emailRegex.test(email)) {\r\n    errors.email = 'Enter a valid email address';\r\n  }\r\n  return errors;\r\n}\r\n","import Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst DeletePersonModal = (props) => {\r\n  const onSubmit = () => {\r\n    props.onSubmit(props.person.id);\r\n  };\r\n\r\n  return (\r\n    <Modal show={props.show} onHide={props.onHide} animation={false}>\r\n      <Modal.Header closeButton closeLabel=''>\r\n        <Modal.Title>Delete person</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>Confirm that you want to delete {props.person.fname} {props.person.lname}. </p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>Cancel</Button>\r\n        <Button variant=\"primary\" onClick={onSubmit}>Delete person</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );  \r\n}\r\n\r\nexport default DeletePersonModal;\r\n","export default __webpack_public_path__ + \"static/media/surprised-chipmunk.2ceca5f5.png\";","// Logo image is from https://www.goodfreephotos.com/. Image license is \r\n// CC0 / Public Domain: http://creativecommons.org/licenses/publicdomain/.\r\nimport chipmunk from '../../img/surprised-chipmunk.png';\r\nimport css from './Header.module.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className={css.headerContent}>\r\n            <img id={css.titleIcon} src={chipmunk} alt=\"App icon\" />\r\n            <span id={css.title}>React 2 CRUD</span>\r\n          </div>\r\n        </div> \r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import {ExclamationTriangleFill} from 'react-bootstrap-icons';\r\nimport css from './APIWarning.module.css';\r\n\r\nconst APIWarning = () => {\r\n  return (\r\n    <>\r\n      <div className={css.apiWarnings}>\r\n        <div className={css.titleRow}>\r\n          <div className={css.warningIconContainer}>\r\n            <ExclamationTriangleFill className={css.warningIcon} />\r\n          </div>\r\n          <span className={css.warningTitle}>The mecallapi.com third-party API service:</span>\r\n        </div>\r\n        <ul>\r\n          <li>Does not allow you to delete or update the first ten people.</li>\r\n          <li>Resets the people list every ten minutes.</li>\r\n          <li>Does not provide a token; all users share data.</li>\r\n          <li>Does not ensure unique IDs.</li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n  \r\nexport default APIWarning;\r\n","import css from './Copyright.module.css';\r\n\r\nconst Copyright = () => {\r\n  return (\r\n    <>\r\n      <div className={css.copyright}>Copyright 2021, React 2 CRUD, Inc., All Rights Reserved.</div>\r\n    </>\r\n  )\r\n}\r\n  \r\nexport default Copyright;\r\n","import APIWarning from '../content/APIWarning';\r\nimport Copyright from '../content/Copyright';\r\nimport css from './Footer.module.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className={css.footer}>\r\n      <APIWarning />\r\n      <Copyright />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport css from './PeopleHeader.module.css';\r\n\r\nconst PeopleHeader = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <Row id={css.peopleHeaderRow}>\r\n        <Col>\r\n          <div className={css.contentTitle}>People</div>\r\n          <Button variant=\"primary\" id={css.addBtn} onClick={props.showAddModal}>Add a person</Button>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PeopleHeader;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Table from 'react-bootstrap/Table';\r\nimport css from './PeopleTable.module.css';\r\n\r\nconst PeopleTable = (props) => {\r\n  return (\r\n    <>\r\n      <Row> \r\n        <Col>\r\n          <Table striped id={css.peopleTable}>\r\n            <thead>\r\n              <tr>\r\n                <th id={css.idCol}>ID</th>\r\n                <th id={css.firstnameCol}>First Name</th>\r\n                <th id={css.lastnameCol}>Last Name</th>\r\n                <th id={css.emailCol}>Email</th>\r\n                <th id={css.actionsCol}>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {props.personRows}\r\n            </tbody>\r\n          </Table> \r\n        </Col>\r\n      </Row> \r\n    </>\r\n  );\r\n}\r\n\r\nexport default PeopleTable;\r\n","import Button from 'react-bootstrap/Button';\r\nimport { Eye, PencilSquare, TrashFill } from 'react-bootstrap-icons';\r\nimport css from './PersonTableRow.module.css';\r\n\r\nconst PersonTableRow = (props) => {\r\n  const onProfileModal = () => {\r\n    props.showProfileModal(props.person)\r\n  }\r\n  const onUpdateModal = () => {\r\n    props.showUpdateModal(props.person)\r\n  }\r\n  const onDeleteModal = () => {\r\n    props.showDeleteModal(props.person)\r\n  }\r\n  \r\n  // The mecallapi API index endpoint returns the email in the username field.\r\n  return (\r\n    <tr>\r\n      <td>{props.person.id}</td>\r\n      <td>{props.person.fname}</td>\r\n      <td>{props.person.lname}</td>\r\n      <td>{props.person.username}</td>\r\n      <td>\r\n        <Button variant=\"primary\" className={css.actionBtn} title=\"Display profile\" onClick={onProfileModal}><Eye />         </Button>\r\n        <Button variant=\"primary\" className={css.actionBtn} title=\"Update profile\"  onClick={onUpdateModal} ><PencilSquare /></Button>\r\n        <Button variant=\"danger\"  className={css.actionBtn} title=\"Delete\"          onClick={onDeleteModal} ><TrashFill />   </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default PersonTableRow;\r\n","import {indexURL} from './urls';\r\n\r\nconst getPeople = (onGetOk, onGetError) => {\r\n  const options = {\r\n    method:  'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n  fetch(indexURL, options)\r\n    .then(res => {\r\n      if (!res.ok) { throw res }\r\n      return res.json()\r\n    })\r\n    .then( (data) => {\r\n      onGetOk(data);    \r\n    })\r\n    .catch(err => { \r\n      onGetError(`${err.status}; ${err.statusText}`);\r\n    });\r\n}\r\n\r\nexport default getPeople;\r\n","import React from 'react';\r\nimport {useEffect, useState} from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport readPerson from './http/httpRead';\r\nimport deletePerson from './http/httpDelete';\r\nimport AlertMsg from './components/content/AlertMsg';\r\nimport DisplayPersonModal from './components/modals/DisplayPersonModal';\r\nimport PersonInfoModal from './components/modals/PersonInfoModal';\r\nimport DeletePersonModal from './components/modals/DeletePersonModal';\r\nimport Header from './components/layout/Header';\r\nimport Footer from './components/layout/Footer';\r\nimport PeopleHeader from './components/content/PeopleHeader';\r\nimport PeopleTable from './components/content/PeopleTable';\r\nimport PersonTableRow from './components/content/PersonTableRow';\r\nimport getPeople from './http/httpIndex';  \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport css from './App.module.css';\r\n\r\nconst App = () => {\r\n  const [alertMsg, setAlertMsg] = useState('');\r\n  const [alertMsgVariant, setAlertMsgVariant] = useState('');\r\n\r\n  const [personRows, setPersonRows] = useState([]);\r\n  const onGetError = (message) => {\r\n    setAlertMsg(`FETCH PEOPLE -- Error ${message}; please try again later`);\r\n    setAlertMsgVariant('danger');\r\n  }   \r\n  const onGetOk = (origPeopleList) => {\r\n    if (origPeopleList) {\r\n      const people = origPeopleList.reverse();   // Place new people on top\r\n\r\n      let rows = people.map((person) => (\r\n        <PersonTableRow \r\n          person={person} \r\n          key={person.id} \r\n          showProfileModal = {showProfileModal}\r\n          showUpdateModal = {showUpdateModal}\r\n          showDeleteModal = {showDeleteModal}\r\n        />\r\n      ));\r\n      setPersonRows(rows);\r\n    }\r\n  };\r\n  const getCurrentPeople = () => {\r\n    setAlertMsg('');\r\n    getPeople(onGetOk, onGetError);\r\n  }\r\n \r\n  useEffect(() => {\r\n      getCurrentPeople()\r\n    }, \r\n    // eslint-disable-next-line\r\n    []  // Run upon mounting only. Ignore pesky ESLint. \r\n  );\r\n\r\n  //=== Create / Add ===\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const showAddModal = () => {\r\n    setAlertMsg('');\r\n    setShowAdd(true);\r\n  }\r\n  const hideAddModal = () => {\r\n    setShowAdd(false);\r\n  }\r\n\r\n  //=== Read Profile ===\r\n  const [person, setPerson] = useState([]);\r\n  const [showProfile, setShowProfile] = useState(false);\r\n  const showProfileModal = (person) => {\r\n    setAlertMsg('');\r\n    readPerson(person.id, onReadOk, onReadWarning, onReadError);\r\n  }\r\n  const hideProfileModal = () => {\r\n    setShowProfile(false);\r\n  }\r\n\r\n  const onReadError = (message) => {\r\n    setAlertMsgVariant('danger');\r\n    setAlertMsg(`READ PROFILE -- Error ${message}; please try again later`);\r\n  }\r\n  const onReadWarning = (message) => {\r\n    setAlertMsgVariant('warning');\r\n    setAlertMsg(`READ PROFILE -- ${message}`);\r\n  }\r\n  const onReadOk = (person) => {\r\n    setPerson(person);\r\n    setShowProfile(true);\r\n  }\r\n \r\n  //=== Update ===\r\n  const [showUpdate, setShowUpdate] = useState(false);\r\n  const showUpdateModal = (person) => {\r\n    setAlertMsg('');\r\n    setPerson(person);\r\n    setShowUpdate(true);\r\n  }\r\n  const hideUpdateModal = () => {\r\n    setShowUpdate(false);\r\n  }\r\n\r\n  //=== Delete ===\r\n  const [showDelete, setShowDelete] = useState(false);\r\n  const showDeleteModal = (person) => {\r\n    setAlertMsg('');\r\n    setPerson(person);\r\n    setShowDelete(true);\r\n  }\r\n  const hideDeleteModal = () => {\r\n    setShowDelete(false);\r\n  }\r\n  const onDeleteError = (message) => {\r\n    setAlertMsgVariant('danger');\r\n    setAlertMsg(`DELETE PERSON -- Error ${message}; please try again later`);\r\n  }\r\n  const onDeleteWarning = (message) => {\r\n    setAlertMsgVariant('warning');\r\n    setAlertMsg(`DELETE PERSON -- ${message}`);\r\n  }\r\n  const onDeleteOk = () => {\r\n    getCurrentPeople();\r\n  }\r\n  const onSubmitDelete = (person_id) => {\r\n    setShowDelete(false);\r\n    deletePerson(person_id, onDeleteOk, onDeleteWarning, onDeleteError);\r\n  }\r\n\r\n  return (\r\n    <div className={css.App}>\r\n      <Container fluid className={css.content}>\r\n        <Header />\r\n        <div className={css.container}>\r\n          <PeopleHeader showAddModal={showAddModal} />\r\n          <AlertMsg message={alertMsg} variant={alertMsgVariant} />\r\n          <PeopleTable \r\n            personRows={personRows}\r\n            showProfileModal={showProfileModal} \r\n            showUpdateModal={showUpdateModal} \r\n            showDeleteModal={showDeleteModal} \r\n          />\r\n        </div>\r\n\r\n        <DisplayPersonModal \r\n           show={showProfile} person={person} \r\n           onHide={hideProfileModal}\r\n        />\r\n        <PersonInfoModal\r\n          show={showUpdate} type={'UPDATE PROFILE'}\r\n          title=\"Update person\" submitBtnLabel=\"Update person\" personId={person.id} \r\n          defaults={ {\"fname\":person.fname, \"lname\":person.lname, \"email\":person.username} } \r\n          onHide={hideUpdateModal} getCurrentPeople={getCurrentPeople}\r\n          setAlertMsg={setAlertMsg} setAlertMsgVariant={setAlertMsgVariant}\r\n        />        \r\n        <PersonInfoModal\r\n          show={showAdd} type={'ADD PERSON'}\r\n          personId={null} title=\"Add a person\" submitBtnLabel=\"Add person\" \r\n          defaults={ {\"fname\":\"\", \"lname\":\"\", \"email\":\"\"} } \r\n          onHide={hideAddModal} getCurrentPeople={getCurrentPeople}\r\n          setAlertMsg={setAlertMsg} setAlertMsgVariant={setAlertMsgVariant}\r\n        />\r\n        <DeletePersonModal \r\n          show={showDelete} person={person} \r\n          onHide={hideDeleteModal}\r\n          onSubmit={onSubmitDelete} \r\n        />\r\n      </Container>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}