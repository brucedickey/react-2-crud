{"version":3,"sources":["http/urls.js","http/httpRead.js","http/httpDelete.js","components/content/AlertMsg.js","components/modals/DisplayPersonModal.js","http/httpCreate.js","http/httpUpdate.js","components/modals/PersonInfoModal.js","utils/utils.js","components/modals/DeletePersonModal.js","img/surprised-chipmunk.png","components/layout/Header.js","components/content/APIWarning.js","components/content/Copyright.js","components/layout/Footer.js","components/content/PeopleHeader.js","components/content/PersonTableRow.js","http/httpIndex.js","components/content/PeopleTable.js","App.js","reportWebVitals.js","index.js"],"names":["avatarURL","readPerson","id","onReadOk","onReadWarning","onReadError","fetch","then","res","ok","json","status","message","user","catch","err","statusText","deletePerson","onDeleteOk","onDeleteWarning","onDeleteError","person","options","method","body","JSON","stringify","headers","AlertMsg","props","Alert","variant","DisplayPersonModal","Modal","show","onHide","animation","Header","closeButton","closeLabel","Title","Body","Badge","className","src","avatar","alt","fname","lname","username","Footer","Button","onClick","createPerson","firstName","lastName","email","onCreateOk","onCreateWarning","onCreateError","updatePerson","onUpdateOk","onUpdateWarning","onUpdateError","PersonInfoModal","useState","errors","setErrors","errorClass","error","length","onHttpError","setAlertMsgVariant","setAlertMsg","type","onHttpWarning","title","htmlFor","defaultValue","defaults","form","event","preventDefault","target","value","trim","errorsMap","test","validatePerson","Object","keys","refreshTable","submitBtnLabel","DeletePersonModal","onSubmit","chipmunk","APIWarning","Copyright","PeopleHeader","setShow","Row","Col","PersonTableRow","showProfileModal","showUpdateModal","showDeleteModal","getPeople","onGetOk","onGetError","data","PeopleTable","personRows","setPersonRows","alertMsg","alertMsgVariant","useEffect","origPeopleList","rows","reverse","map","Table","striped","App","useReducer","x","setPerson","showProfile","setShowProfile","showUpdate","setShowUpdate","showDelete","setShowDelete","Container","fluid","person_id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kbAKaA,EAAY,0CCcVC,EAjBI,SAACC,EAAIC,EAAUC,EAAeC,GAC/CC,MDDuB,uCCCV,UAAMJ,IAChBK,MAAK,SAAAC,GACJ,IAAKA,EAAIC,GAAM,MAAMD,EACrB,OAAOA,EAAIE,UAEZH,MAAK,SAAAC,GACe,UAAfA,EAAIG,QACNP,EAAc,GAAD,OAAII,EAAII,UAEvBT,EAASK,EAAIK,SAEdC,OAAM,SAAAC,GACLV,EAAY,GAAD,OAAIU,EAAIJ,OAAR,aAAmBI,EAAIC,iBCezBC,EA5BM,SAACf,EAAIgB,EAAYC,EAAiBC,GACrD,IAAMC,EAAS,CACb,GAAMnB,GAGFoB,EAAU,CACdC,OAAS,SACTC,KAASC,KAAKC,UAAUL,GACxBM,QAAS,CACP,eAAgB,qBAGpBrB,MFVuB,6CEUNgB,GACdf,MAAK,SAAAC,GACJ,IAAKA,EAAIC,GAAM,MAAMD,EACrB,OAAOA,EAAIE,UAEZH,MAAK,SAAAC,GACe,UAAfA,EAAIG,QACNQ,EAAgB,GAAD,OAAIX,EAAII,UAEzBM,OAEDJ,OAAM,SAAAC,GACLK,EAAc,GAAD,OAAIL,EAAIJ,OAAR,aAAmBI,EAAIC,iB,eChB3BY,EARE,SAACC,GAChB,OACE,mCACIA,EAAMjB,SAAW,cAACkB,EAAA,EAAD,CAAOC,QAASF,EAAME,QAAtB,SAAgCF,EAAMjB,a,sBCsBhDoB,G,YArBY,SAACH,GAC1B,OACE,eAACI,EAAA,EAAD,CAAOC,KAAML,EAAMK,KAAMC,OAAQN,EAAMM,OAAQC,WAAW,EAA1D,UACE,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAACC,WAAW,GAArC,SACE,cAACN,EAAA,EAAMO,MAAP,wBAEF,eAACP,EAAA,EAAMQ,KAAP,WACE,eAACC,EAAA,EAAD,CAAOC,UAAU,WAAjB,kBAAkCd,EAAMR,OAAOnB,GAA/C,OACA,qBAAK0C,IAAKf,EAAMR,OAAOwB,OAAQF,UAAU,gBAAgBG,IAAI,YAC7D,sBAAKH,UAAU,6BAAf,UACE,oBAAGA,UAAU,cAAb,UAA4Bd,EAAMR,OAAO0B,MAAzC,IAAiDlB,EAAMR,OAAO2B,SAC9D,4BAAInB,EAAMR,OAAO4B,iBAGrB,cAAChB,EAAA,EAAMiB,OAAP,UACE,cAACC,EAAA,EAAD,CAAQpB,QAAQ,UAAUqB,QAASvB,EAAMM,OAAzC,0BCYOkB,EA/BM,SAACC,EAAWC,EAAUC,EAAOC,EAAYC,EAAiBC,GAC7E,IAAMtC,EAAS,CACb,MAAYiC,EACZ,MAAYC,EACZ,SAAYC,EACZ,MAAYA,EACZ,OAAYxD,GAERsB,EAAU,CACdC,OAAS,OACTC,KAASC,KAAKC,UAAUL,GACxBM,QAAS,CACP,eAAgB,qBAGpBrB,MLhBuB,6CKgBNgB,GACdf,MAAK,SAAAC,GACJ,IAAKA,EAAIC,GAAM,MAAMD,EACrB,OAAOA,EAAIE,UAEZH,MAAK,SAAAC,GACe,UAAfA,EAAIG,QACN+C,EAAgB,GAAD,OAAIlD,EAAII,UAEzB6C,OAED3C,OAAM,SAAAC,GACL4C,EAAc,GAAD,OAAI5C,EAAIJ,OAAR,aAAmBI,EAAIC,iBCK3B4C,EAhCM,SAACN,EAAWC,EAAUC,EAAOtD,EAAI2D,EAAYC,EAAiBC,GACjF,IAAM1C,EAAS,CACb,GAAYnB,EACZ,MAAYoD,EACZ,MAAYC,EACZ,SAAYC,EACZ,MAAYA,EACZ,OAAYxD,GAERsB,EAAU,CACdC,OAAS,MACTC,KAASC,KAAKC,UAAUL,GACxBM,QAAS,CACP,eAAgB,qBAGpBrB,MNfuB,6CMeNgB,GACdf,MAAK,SAAAC,GACJ,IAAKA,EAAIC,GAAM,MAAMD,EACrB,OAAOA,EAAIE,UAEZH,MAAK,SAAAC,GACe,UAAfA,EAAIG,QACNmD,EAAgB,GAAD,OAAItD,EAAII,UAEzBiD,OAED/C,OAAM,SAAAC,GACLgD,EAAc,GAAD,OAAIhD,EAAIJ,OAAR,aAAmBI,EAAIC,iBCsD3BgD,G,MA3ES,SAACnC,GAAW,IAAD,EACLoC,mBAAS,IADJ,mBAC1BC,EAD0B,KAClBC,EADkB,KAG3BC,EAAa,SAAAC,GACjB,OAASA,GAASA,EAAMC,OAAS,EAAI,gBAAkB,IAGnDC,EAAc,SAAC3D,GACnBiB,EAAM2C,mBAAmB,UACzB3C,EAAM4C,YAAN,UAAqB5C,EAAM6C,KAA3B,qBAA4C9D,EAA5C,8BAEI+D,EAAgB,SAAC/D,GACrBiB,EAAM2C,mBAAmB,WACzB3C,EAAM4C,YAAN,UAAqB5C,EAAM6C,KAA3B,eAAsC9D,KAyBxC,OACE,eAACqB,EAAA,EAAD,CAAOC,KAAML,EAAMK,KAAMC,OAAQN,EAAMM,OAAQC,WAAW,EAA1D,UACE,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAACC,WAAW,GAArC,SACE,cAACN,EAAA,EAAMO,MAAP,UAAcX,EAAM+C,UAEtB,cAAC3C,EAAA,EAAMQ,KAAP,UACE,uBAAMvC,GAAG,mBAAT,UACE,sBAAKyC,UAAU,OAAf,UACE,uBAAOkC,QAAQ,kBAAkBlC,UAAU,aAA3C,wBACA,uBAAO+B,KAAK,OAAO/B,UAAS,uBAAkByB,EAAWF,EAAOZ,YAC1DpD,GAAG,kBAAkB4E,aAAcjD,EAAMkD,SAAShC,QACvDmB,EAAOZ,WAAa,mBAAGX,UAAU,YAAb,SAA0BuB,EAAOZ,eAExD,sBAAKX,UAAU,OAAf,UACE,uBAAOkC,QAAQ,iBAAiBlC,UAAU,aAA1C,uBACA,uBAAO+B,KAAK,OAAO/B,UAAS,uBAAkByB,EAAWF,EAAOX,WAC1DrD,GAAG,iBAAiB4E,aAAcjD,EAAMkD,SAAS/B,QACtDkB,EAAOX,UAAY,mBAAGZ,UAAU,YAAb,SAA0BuB,EAAOX,cAEvD,sBAAKZ,UAAU,OAAf,UACE,uBAAOkC,QAAQ,aAAalC,UAAU,aAAtC,2BACA,uBAAO+B,KAAK,QAAQ/B,UAAS,uBAAkByB,EAAWF,EAAOV,QAC3DtD,GAAG,aAAa4E,aAAcjD,EAAMkD,SAASvB,QAClDU,EAAOV,OAAS,mBAAGb,UAAU,YAAb,SAA0BuB,EAAOV,gBAIxD,eAACvB,EAAA,EAAMiB,OAAP,WACE,cAACC,EAAA,EAAD,CAAQpB,QAAQ,YAAYqB,QAASvB,EAAMM,OAA3C,oBACA,cAACgB,EAAA,EAAD,CAAQpB,QAAQ,UAAU2C,KAAK,SAASM,KAAK,mBAAmB5B,QAnDrD,SAAC6B,GAChBA,EAAMC,iBAGN,IAAM5B,EAAY2B,EAAME,OAAOH,KAAK,GAAGI,MAAMC,OACvC9B,EAAW0B,EAAME,OAAOH,KAAK,GAAGI,MAAMC,OACtC7B,EAAQyB,EAAME,OAAOH,KAAK,GAAGI,MAAMC,OAEnCC,ECjCoB,SAAChC,EAAWC,EAAUC,GAElD,IAAMU,EAAS,GAiBf,MAZkB,KAAdZ,IACFY,EAAOZ,UAAY,2BAEJ,KAAbC,IACFW,EAAOX,SAAW,yBAEN,KAAVC,IACAU,EAAOV,MAAQ,6BAEL,KAAVA,GAXe,+CAWa+B,KAAK/B,KACnCU,EAAOV,MAAQ,+BAEVU,EDcasB,CAAelC,EAAWC,EAAUC,GACtDW,EAAUmB,GAE4B,IAAlCG,OAAOC,KAAKJ,GAAWhB,SACzBzC,EAAMM,SACa,mBAAfN,EAAM6C,KACRd,EAAaN,EAAWC,EAAUC,EAAO3B,EAAM3B,GAAI2B,EAAM8D,aAAchB,EAAeJ,GAEhE,eAAf1C,EAAM6C,MACbrB,EAAaC,EAAWC,EAAUC,EAAO3B,EAAM8D,aAAchB,EAAeJ,KAkC5E,SACG1C,EAAM+D,yBEnDFC,G,MArBW,SAAChE,GAKzB,OACE,eAACI,EAAA,EAAD,CAAOC,KAAML,EAAMK,KAAMC,OAAQN,EAAMM,OAAQC,WAAW,EAA1D,UACE,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAACC,WAAW,GAArC,SACE,cAACN,EAAA,EAAMO,MAAP,8BAEF,cAACP,EAAA,EAAMQ,KAAP,UACE,iEAAoCZ,EAAMR,OAAO0B,MAAjD,IAAyDlB,EAAMR,OAAO2B,MAAtE,UAEF,eAACf,EAAA,EAAMiB,OAAP,WACE,cAACC,EAAA,EAAD,CAAQpB,QAAQ,YAAYqB,QAASvB,EAAMM,OAA3C,oBACA,cAACgB,EAAA,EAAD,CAAQpB,QAAQ,UAAUqB,QAdf,WACfvB,EAAMiE,SAASjE,EAAMR,OAAOnB,KAaxB,mCCpBO,MAA0B,+CCoB1BmC,G,MAfA,WACb,OACE,iCACE,qBAAKM,UAAU,MAAf,SACE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKzC,GAAG,aAAa0C,IAAKmD,EAAUjD,IAAI,aACxC,sBAAM5C,GAAG,QAAT,qC,sBCYG8F,EArBI,WACjB,OACE,mCACE,sBAAKrD,UAAU,eAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,cAAC,IAAD,CAAyBA,UAAU,mBAErC,sBAAMA,UAAU,gBAAhB,2DAEF,+BACE,8FACA,2EACA,iFACA,sECPKsD,G,MARG,WAChB,OACE,mCACE,qBAAKtD,UAAU,YAAf,0ECQSO,EATA,WACb,OACE,sBAAKP,UAAU,SAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,gBC4BSuD,G,MA7BM,SAACrE,GAAW,IAAD,EACNoC,oBAAS,GADH,mBACvB/B,EADuB,KACjBiE,EADiB,KAU9B,OACE,qCACE,cAACC,EAAA,EAAD,CAAKlG,GAAG,oBAAR,SACE,eAACmG,EAAA,EAAD,WACE,qBAAK1D,UAAU,gBAAf,oBACA,cAACQ,EAAA,EAAD,CAAQpB,QAAQ,UAAU7B,GAAG,UAAUkD,QAbhC,WACbvB,EAAM4C,YAAY,IAClB0B,GAAQ,IAWF,+BAGJ,cAAC,EAAD,CACEjE,KAAMA,EAAMwC,KAAM,aAAcvC,OAbvB,WACbgE,GAAQ,IAaJjG,GAAI,KAAM0E,MAAM,eAAegB,eAAe,aAC9Cb,SAAW,CAAC,MAAQ,GAAI,MAAQ,GAAI,MAAQ,IAC5CY,aAAc9D,EAAM8D,aACpBnB,mBAAoB3C,EAAM2C,mBAAoBC,YAAa5C,EAAM4C,mB,gCCG1D6B,G,MA7BQ,SAACzE,GACtB,IAAMR,EAASQ,EAAMR,OAarB,OACE,+BACE,6BAAKA,EAAOnB,KACZ,6BAAKmB,EAAO0B,QACZ,6BAAK1B,EAAO2B,QACZ,6BAAK3B,EAAO4B,WACZ,+BACE,eAACE,EAAA,EAAD,CAAQpB,QAAQ,UAAUY,UAAU,aAAaiC,MAAM,kBAAkBxB,QAlBxD,WACrBvB,EAAM0E,iBAAiBlF,IAiBnB,UAAkG,cAAC,IAAD,IAAlG,eACA,cAAC8B,EAAA,EAAD,CAAQpB,QAAQ,UAAUY,UAAU,aAAaiC,MAAM,iBAAkBxB,QAhBzD,WACpBvB,EAAM2E,gBAAgBnF,IAelB,SAAkG,cAAC,IAAD,MAClG,eAAC8B,EAAA,EAAD,CAAQpB,QAAQ,SAAUY,UAAU,aAAaiC,MAAM,SAAkBxB,QAdzD,WACpBvB,EAAM4E,gBAAgBpF,IAalB,UAAkG,cAAC,IAAD,IAAlG,iBCLOqF,EApBG,SAACC,EAASC,GAO1BtG,MjBTuB,sCiBGP,CACdiB,OAAS,MACTI,QAAS,CACP,eAAgB,sBAIjBpB,MAAK,SAAAC,GACJ,IAAKA,EAAIC,GAAM,MAAMD,EACrB,OAAOA,EAAIE,UAEZH,MAAM,SAACsG,GACNF,EAAQE,MAET/F,OAAM,SAAAC,GACL6F,EAAW,GAAD,OAAI7F,EAAIJ,OAAR,aAAmBI,EAAIC,iBCoDxB8F,G,MA5DK,SAACjF,GAAW,IAAD,EACOoC,mBAAS,IADhB,mBACtB8C,EADsB,KACVC,EADU,OAGG/C,mBAAS,IAHZ,mBAGtBgD,EAHsB,KAGZxC,EAHY,OAIiBR,mBAAS,IAJ1B,mBAItBiD,EAJsB,KAIL1C,EAJK,KAMtBmB,EAAoE9D,EAApE8D,aAAcY,EAAsD1E,EAAtD0E,iBAAkBC,EAAoC3E,EAApC2E,gBAAiBC,EAAmB5E,EAAnB4E,gBA6BxD,OA3BAU,qBAAU,WAsBR1C,EAAY,IACZiC,GAlBgB,SAACU,GACf,GAAIA,EAAgB,CAClB,IAEIC,EAFWD,EAAeE,UAEZC,KAAI,SAAClG,GAAD,OACpB,cAAC,EAAD,CACEA,OAAQA,EAERkF,iBAAoBA,EACpBC,gBAAmBA,EACnBC,gBAAmBA,GAHdpF,EAAOnB,OAMhB8G,EAAcK,OAjBC,SAACzG,GAClB6D,EAAY,yBAAD,OAA0B7D,EAA1B,8BACX4D,EAAmB,eAsBpB,CAACmB,EAAcY,EAAkBC,EAAiBC,IAGnD,qCACE,cAAC,EAAD,CAAU7F,QAASqG,EAAUlF,QAASmF,IACtC,cAACd,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACmB,EAAA,EAAD,CAAOC,SAAO,EAACvH,GAAG,eAAlB,UACE,gCACE,+BACE,oBAAIA,GAAG,SAAP,gBACA,oBAAIA,GAAG,gBAAP,wBACA,oBAAIA,GAAG,eAAP,uBACA,oBAAIA,GAAG,YAAP,mBACA,oBAAIA,GAAG,cAAP,0BAGJ,uBAAOA,GAAG,oBAAV,SACG6G,gBCwDAW,G,YAtGH,WAAO,IAAD,EACSC,sBAAW,SAAAC,GAAC,OAAIA,EAAI,IAAG,GAAvCjC,EADO,sBAGY1B,mBAAS,IAHrB,mBAGT5C,EAHS,KAGDwG,EAHC,OAIgB5D,mBAAS,IAJzB,mBAITgD,EAJS,KAICxC,EAJD,OAK8BR,mBAAS,IALvC,mBAKTiD,EALS,KAKQ1C,EALR,OAQsBP,oBAAS,GAR/B,mBAQT6D,EARS,KAQIC,EARJ,KAiBV1H,EAAc,SAACO,GACnB4D,EAAmB,UACnBC,EAAY,yBAAD,OAA0B7D,EAA1B,8BAEPR,EAAgB,SAACQ,GACrB4D,EAAmB,WACnBC,EAAY,mBAAD,OAAoB7D,KAE3BT,EAAW,SAACkB,GAChBwG,EAAUxG,GACV0G,GAAe,IA3BD,EA+BoB9D,oBAAS,GA/B7B,mBA+BT+D,EA/BS,KA+BGC,EA/BH,OA0CoBhE,oBAAS,GA1C7B,mBA0CTiE,EA1CS,KA0CGC,EA1CH,KAmDV/G,EAAgB,SAACR,GACrB4D,EAAmB,UACnBC,EAAY,0BAAD,OAA2B7D,EAA3B,8BAEPO,EAAkB,SAACP,GACvB4D,EAAmB,WACnBC,EAAY,oBAAD,OAAqB7D,KAOlC,OACE,sBAAK+B,UAAU,MAAf,UACE,eAACyF,EAAA,EAAD,CAAWC,OAAK,EAAC1F,UAAU,UAA3B,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAcgD,aAAcA,EACdlB,YAAaA,EAAaD,mBAAoBA,IAC5D,cAAC,EAAD,CAAU5D,QAASqG,EAAUlF,QAASmF,IACtC,cAAC,EAAD,CAAavB,aAAcA,EAAcY,iBA/DxB,SAAClF,GACxBoD,EAAY,IACZxE,EAAWoB,EAAOnB,GAAIC,EAAUC,EAAeC,IA8D5BmG,gBAzCG,SAACnF,GACvBoD,EAAY,IACZoD,EAAUxG,GACV4G,GAAc,IAsCuCxB,gBA9B/B,SAACpF,GACvBoD,EAAY,IACZoD,EAAUxG,GACV8G,GAAc,SAkCV,cAAC,EAAD,CACGjG,KAAM4F,EAAazG,OAAQA,EAC3Bc,OArEgB,WACvB4F,GAAe,IAoEkBpC,aAAcA,IAE3C,cAAC,EAAD,CACEzD,KAAM8F,EAAYtD,KAAM,iBACxBE,MAAM,gBAAgBgB,eAAe,gBAAgB1F,GAAImB,EAAOnB,GAChE6E,SAAW,CAAC,MAAQ1D,EAAO0B,MAAO,MAAQ1B,EAAO2B,MAAO,MAAQ3B,EAAO4B,UACvEd,OAnDgB,WACtB8F,GAAc,IAkDiBtC,aAAcA,EACvCnB,mBAAoBA,EAAoBC,YAAaA,IAEvD,cAAC,EAAD,CACEvC,KAAMgG,EAAY7G,OAAQA,EAC1Bc,OA7CgB,WACtBgG,GAAc,IA4CiBxC,aAAcA,EACvCG,SAnCe,SAACwC,GACtBH,GAAc,GACdlH,EAAaqH,EAAW3C,EAAcxE,EAAiBC,SAoCrD,cAAC,EAAD,SCpGSmH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlI,MAAK,YAAkD,IAA/CmI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8a91fc27.chunk.js","sourcesContent":["export const indexURL  = 'https://www.mecallapi.com/api/users';\r\nexport const createURL = 'https://www.mecallapi.com/api/users/create';\r\nexport const readURL   = 'https://www.mecallapi.com/api/users/';        // Append {id}\r\nexport const updateURL = 'https://www.mecallapi.com/api/users/update';\r\nexport const deleteURL = 'https://www.mecallapi.com/api/users/delete';\r\nexport const avatarURL = 'https://www.mecallapi.com/users/cat.png';\r\n","import {readURL} from './urls';\r\n\r\nconst readPerson = (id, onReadOk, onReadWarning, onReadError) => {\r\n  fetch(readURL + `${id}`)\r\n    .then(res => {\r\n      if (!res.ok) { throw res }\r\n      return res.json()\r\n    })\r\n    .then(res => {\r\n      if (res.status === 'error') {\r\n        onReadWarning(`${res.message}`);\r\n      }\r\n      onReadOk(res.user);\r\n    })\r\n    .catch(err => { \r\n      onReadError(`${err.status}; ${err.statusText}`);\r\n    });\r\n}\r\n\r\nexport default readPerson;\r\n","import {deleteURL} from './urls';\r\n\r\nconst deletePerson = (id, onDeleteOk, onDeleteWarning, onDeleteError) => {\r\n  const person = {\r\n    \"id\": id\r\n\r\n  };\r\n  const options = {\r\n    method:  'DELETE',\r\n    body:    JSON.stringify(person),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  fetch(deleteURL, options)\r\n    .then(res => {\r\n      if (!res.ok) { throw res }\r\n      return res.json()\r\n    })\r\n    .then(res => {\r\n      if (res.status === 'error') {\r\n        onDeleteWarning(`${res.message}`);\r\n      }\r\n      onDeleteOk();\r\n    })\r\n    .catch(err => { \r\n      onDeleteError(`${err.status}; ${err.statusText}`);\r\n    });\r\n}\r\n\r\nexport default deletePerson;\r\n","import Alert from 'react-bootstrap/Alert';\r\n\r\nconst AlertMsg = (props) => {\r\n  return (\r\n    <>\r\n      { props.message && <Alert variant={props.variant}>{props.message}</Alert> }\r\n    </>\r\n  )\r\n}\r\n  \r\nexport default AlertMsg;\r\n","import Badge from \"react-bootstrap/Badge\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport './DisplayPersonModal.css';\r\n\r\nconst DisplayPersonModal = (props) => {\r\n  return (\r\n    <Modal show={props.show} onHide={props.onHide} animation={false}>\r\n      <Modal.Header closeButton closeLabel=''>\r\n        <Modal.Title>Profile</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Badge className=\"id-badge\"> ID: {props.person.id} </Badge>\r\n        <img src={props.person.avatar} className=\"profile-image\" alt=\"Profile\"></img>\r\n        <div className=\"text-center person-details\">\r\n          <p className=\"person-name\">{props.person.fname} {props.person.lname}</p>\r\n          <p>{props.person.username}</p>\r\n        </div>  \r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );  \r\n}\r\n\r\nexport default DisplayPersonModal;\r\n","import {avatarURL, createURL} from './urls';\r\n\r\nconst createPerson = (firstName, lastName, email, onCreateOk, onCreateWarning, onCreateError) => {\r\n  const person = {\r\n    \"fname\":    firstName,\r\n    \"lname\":    lastName,\r\n    \"username\": email,   // In the mecallapi API, username and email are aliases of each other\r\n    \"email\":    email,\r\n    \"avatar\":   avatarURL,\r\n  };\r\n  const options = {\r\n    method:  'POST',\r\n    body:    JSON.stringify(person),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  fetch(createURL, options)\r\n    .then(res => {\r\n      if (!res.ok) { throw res }\r\n      return res.json()\r\n    })\r\n    .then(res => {\r\n      if (res.status === 'error') {\r\n        onCreateWarning(`${res.message}`);\r\n      }\r\n      onCreateOk();\r\n    })\r\n    .catch(err => { \r\n      onCreateError(`${err.status}; ${err.statusText}`);\r\n    });\r\n} \r\n\r\nexport default createPerson;\r\n","import {avatarURL, updateURL} from './urls';\r\n\r\nconst updatePerson = (firstName, lastName, email, id, onUpdateOk, onUpdateWarning, onUpdateError) => {\r\n  const person = {\r\n    \"id\":       id,\r\n    \"fname\":    firstName,\r\n    \"lname\":    lastName,\r\n    \"username\": email,   // In the mecallapi API, username and email are aliases of each other\r\n    \"email\":    email,\r\n    \"avatar\":   avatarURL\r\n  };\r\n  const options = {\r\n    method:  'PUT',\r\n    body:    JSON.stringify(person),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  fetch(updateURL, options)\r\n    .then(res => {\r\n      if (!res.ok) { throw res }\r\n      return res.json()\r\n    })\r\n    .then(res => {\r\n      if (res.status === 'error') {\r\n        onUpdateWarning(`${res.message}`);\r\n      }\r\n      onUpdateOk();\r\n    })\r\n    .catch(err => { \r\n      onUpdateError(`${err.status}; ${err.statusText}`);\r\n    });\r\n}\r\n\r\nexport default updatePerson;\r\n","import React, {useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport createPerson from '../../http/httpCreate';\r\nimport updatePerson from '../../http/httpUpdate';\r\nimport {validatePerson} from '../../utils/utils';\r\nimport './PersonInfoModal.css';\r\n\r\nconst PersonInfoModal = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const errorClass = error => {\r\n    return ((error && error.length > 0)? 'invalid-input' : '');\r\n  };\r\n\r\n  const onHttpError = (message) => {\r\n    props.setAlertMsgVariant('danger');\r\n    props.setAlertMsg(`${props.type} -- Error ${message}; please try again later`);\r\n  }\r\n  const onHttpWarning = (message) => {\r\n    props.setAlertMsgVariant('warning');\r\n    props.setAlertMsg(`${props.type} -- ${message}`);\r\n  }\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // We have the event so React refs are not needed.\r\n    const firstName = event.target.form[0].value.trim();\r\n    const lastName = event.target.form[1].value.trim();\r\n    const email = event.target.form[2].value.trim();\r\n\r\n    const errorsMap = validatePerson(firstName, lastName, email);\r\n    setErrors(errorsMap);\r\n\r\n    if (Object.keys(errorsMap).length === 0) {\r\n      props.onHide();\r\n      if (props.type === 'UPDATE PROFILE') {\r\n        updatePerson(firstName, lastName, email, props.id, props.refreshTable, onHttpWarning, onHttpError);\r\n      } \r\n      else if (props.type === 'ADD PERSON') {\r\n        createPerson(firstName, lastName, email, props.refreshTable, onHttpWarning, onHttpError);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={props.show} onHide={props.onHide} animation={false}>\r\n      <Modal.Header closeButton closeLabel=''>\r\n        <Modal.Title>{props.title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <form id=\"person-info-form\">\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"form-first-name\" className=\"form-label\">First Name</label>\r\n            <input type=\"text\" className={`form-control ${errorClass(errors.firstName)}`} \r\n                  id=\"form-first-name\" defaultValue={props.defaults.fname} />\r\n            {errors.firstName && <p className=\"error-msg\">{errors.firstName}</p>}\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"form-last-name\" className=\"form-label\">Last name</label>\r\n            <input type=\"text\" className={`form-control ${errorClass(errors.lastName)}`}\r\n                  id=\"form-last-name\" defaultValue={props.defaults.lname} />\r\n            {errors.lastName && <p className=\"error-msg\">{errors.lastName}</p>}\r\n          </div>                            \r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"form-email\" className=\"form-label\">Email address</label>\r\n            <input type=\"email\" className={`form-control ${errorClass(errors.email)}`} \r\n                  id=\"form-email\" defaultValue={props.defaults.email} />\r\n            {errors.email && <p className=\"error-msg\">{errors.email}</p>}\r\n          </div>\r\n        </form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>Cancel</Button>\r\n        <Button variant=\"primary\" type=\"submit\" form=\"person-info-form\" onClick={onSubmit}>\r\n          {props.submitBtnLabel}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default PersonInfoModal;\r\n","export const validatePerson = (firstName, lastName, email) => {\r\n\r\n  const errors = {};\r\n\r\n  // A simplistic and incomplete email regex\r\n  const emailRegex = /^[A-Z0-9._%+-]+@([A-Z0-9-]+\\.)+[A-Z]{2,20}$/i;\r\n\r\n  if (firstName === '' ) {\r\n    errors.firstName = \"First name is required.\"\r\n  } \r\n  if (lastName === '' ) {\r\n    errors.lastName = 'Last name is required'; \r\n  } \r\n  if (email === '' ) {\r\n      errors.email = 'Email address is required';\r\n  } \r\n  if (email !== '' && !emailRegex.test(email)) {\r\n    errors.email = 'Enter a valid email address';\r\n  }\r\n  return errors;\r\n}\r\n","import Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport './DeletePersonModal.css';\r\n\r\nconst DeletePersonModal = (props) => {\r\n  const onSubmit = () => {\r\n    props.onSubmit(props.person.id);\r\n  };\r\n\r\n  return (\r\n    <Modal show={props.show} onHide={props.onHide} animation={false}>\r\n      <Modal.Header closeButton closeLabel=''>\r\n        <Modal.Title>Delete person</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>Confirm that you want to delete {props.person.fname} {props.person.lname}. </p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>Cancel</Button>\r\n        <Button variant=\"primary\" onClick={onSubmit}>Delete person</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );  \r\n}\r\n\r\nexport default DeletePersonModal;\r\n","export default __webpack_public_path__ + \"static/media/surprised-chipmunk.2ceca5f5.png\";","// Logo image is from https://www.goodfreephotos.com/. Image license is \r\n// CC0 / Public Domain: http://creativecommons.org/licenses/publicdomain/.\r\nimport chipmunk from '../../img/surprised-chipmunk.png';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"header-content\">\r\n            <img id=\"title-icon\" src={chipmunk} alt=\"App icon\" />\r\n            <span id=\"title\">React 2 CRUD</span>\r\n          </div>\r\n        </div> \r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import './APIWarning.css';\r\nimport {ExclamationTriangleFill} from 'react-bootstrap-icons';\r\n\r\nconst APIWarning = () => {\r\n  return (\r\n    <>\r\n      <div className=\"api-warnings\">\r\n        <div className=\"title-row\">\r\n          <div className=\"warning-icon-container\">\r\n            <ExclamationTriangleFill className=\"warning-icon\" />\r\n          </div>\r\n          <span className=\"warning-title\">The mecallapi.com third-party API service:</span>\r\n        </div>\r\n        <ul>\r\n          <li>Does not allow you to delete or update the first ten people.</li>\r\n          <li>Resets the people list every ten minutes.</li>\r\n          <li>Does not provide a token; all users share data.</li>\r\n          <li>Does not ensure unique IDs.</li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n  \r\nexport default APIWarning;\r\n","import './Copyright.css';\r\n\r\nconst Copyright = () => {\r\n  return (\r\n    <>\r\n      <div className=\"copyright\">Copyright 2021, React 2 CRUD, Inc., All Rights Reserved.</div>\r\n    </>\r\n  )\r\n}\r\n  \r\nexport default Copyright;\r\n","import './Footer.css';\r\nimport APIWarning from '../content/APIWarning';\r\nimport Copyright from '../content/Copyright';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <APIWarning />\r\n      <Copyright />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport PersonInfoModal from '../modals/PersonInfoModal';  // Create and Update modal\r\nimport './PeopleHeader.css';\r\n\r\nconst PeopleHeader = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const onShow = () => {\r\n    props.setAlertMsg('');\r\n    setShow(true);\r\n  }\r\n  const onHide = () => {\r\n    setShow(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row id=\"people-header-row\">\r\n        <Col>\r\n          <div className=\"content-title\">People</div>\r\n          <Button variant=\"primary\" id=\"add-btn\" onClick={onShow}>Add a person</Button>\r\n        </Col>\r\n      </Row>\r\n      <PersonInfoModal \r\n        show={show} type={'ADD PERSON'} onHide={onHide}\r\n        id={null} title=\"Add a person\" submitBtnLabel=\"Add person\" \r\n        defaults={ {\"fname\":\"\", \"lname\":\"\", \"email\":\"\"} } \r\n        refreshTable={props.refreshTable} \r\n        setAlertMsgVariant={props.setAlertMsgVariant} setAlertMsg={props.setAlertMsg}\r\n      /> \r\n    </>\r\n  );\r\n}\r\n\r\nexport default PeopleHeader;\r\n","import Button from 'react-bootstrap/Button';\r\nimport { Eye, PencilSquare, TrashFill } from 'react-bootstrap-icons';\r\nimport './PersonTableRow.css';\r\n\r\nconst PersonTableRow = (props) => {\r\n  const person = props.person;\r\n\r\n  const onProfileModal = () => {\r\n    props.showProfileModal(person)\r\n  }\r\n  const onUpdateModal = () => {\r\n    props.showUpdateModal(person)\r\n  }\r\n  const onDeleteModal = () => {\r\n    props.showDeleteModal(person)\r\n  }\r\n  \r\n  // The mecallapi API index endpoint returns the email in the username field.\r\n  return (\r\n    <tr>\r\n      <td>{person.id}</td>\r\n      <td>{person.fname}</td>\r\n      <td>{person.lname}</td>\r\n      <td>{person.username}</td>\r\n      <td>\r\n        <Button variant=\"primary\" className=\"action-btn\" title=\"Display profile\" onClick={onProfileModal}><Eye />         </Button>\r\n        <Button variant=\"primary\" className=\"action-btn\" title=\"Update profile\"  onClick={onUpdateModal} ><PencilSquare /></Button>\r\n        <Button variant=\"danger\"  className=\"action-btn\" title=\"Delete\"          onClick={onDeleteModal} ><TrashFill />   </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default PersonTableRow;\r\n","import {indexURL} from './urls';\r\n\r\nconst getPeople = (onGetOk, onGetError) => {\r\n  const options = {\r\n    method:  'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n  fetch(indexURL, options)\r\n    .then(res => {\r\n      if (!res.ok) { throw res }\r\n      return res.json()\r\n    })\r\n    .then( (data) => {\r\n      onGetOk(data);    \r\n    })\r\n    .catch(err => { \r\n      onGetError(`${err.status}; ${err.statusText}`);\r\n    });\r\n}\r\n\r\nexport default getPeople;\r\n","import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Table from 'react-bootstrap/Table';\r\nimport AlertMsg from './AlertMsg';\r\nimport PersonTableRow from './PersonTableRow';\r\nimport getPeople from '../../http/httpIndex';\r\nimport './PeopleTable.css';\r\n\r\nconst PeopleTable = (props) => {\r\n  const [personRows, setPersonRows] = useState([]);\r\n\r\n  const [alertMsg, setAlertMsg] = useState('');\r\n  const [alertMsgVariant, setAlertMsgVariant] = useState('');\r\n\r\n  const {refreshTable, showProfileModal, showUpdateModal, showDeleteModal} = props;\r\n\r\n  useEffect(() => {\r\n    const onGetError = (message) => {\r\n      setAlertMsg(`FETCH PEOPLE -- Error ${message}; please try again later.`);\r\n      setAlertMsgVariant('danger');\r\n    }    \r\n    const onGetOk = (origPeopleList) => {\r\n      if (origPeopleList) {\r\n        const people = origPeopleList.reverse();   // Place new people on top\r\n\r\n        let rows = people.map((person) => (\r\n          <PersonTableRow \r\n            person={person} \r\n            key={person.id} \r\n            showProfileModal = {showProfileModal}\r\n            showUpdateModal = {showUpdateModal}\r\n            showDeleteModal = {showDeleteModal}\r\n          />\r\n        ))\r\n        setPersonRows(rows);\r\n      }\r\n    };\r\n\r\n    setAlertMsg('');\r\n    getPeople(onGetOk, onGetError);\r\n\r\n  }, [refreshTable, showProfileModal, showUpdateModal, showDeleteModal]);\r\n\r\n  return (\r\n    <>\r\n      <AlertMsg message={alertMsg} variant={alertMsgVariant} />\r\n      <Row> \r\n        <Col>\r\n          <Table striped id=\"people-table\">\r\n            <thead>\r\n              <tr>\r\n                <th id=\"id-col\">ID</th>\r\n                <th id=\"firstname-col\">First Name</th>\r\n                <th id=\"lastname-col\">Last Name</th>\r\n                <th id=\"email-col\">Email</th>\r\n                <th id=\"actions-col\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody id=\"people-table-body\">\r\n              {personRows}\r\n            </tbody>\r\n          </Table> \r\n        </Col>\r\n      </Row> \r\n    </>\r\n  );\r\n}\r\n\r\nexport default PeopleTable;\r\n","import {useReducer, useState} from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport readPerson from './http/httpRead';\r\nimport deletePerson from './http/httpDelete';\r\nimport AlertMsg from './components/content/AlertMsg';\r\nimport DisplayPersonModal from './components/modals/DisplayPersonModal';\r\nimport PersonInfoModal from './components/modals/PersonInfoModal';\r\nimport DeletePersonModal from './components/modals/DeletePersonModal';\r\nimport Header from './components/layout/Header';\r\nimport Footer from './components/layout/Footer';\r\nimport PeopleHeader from './components/content/PeopleHeader';\r\nimport PeopleTable from './components/content/PeopleTable';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [, refreshTable] = useReducer(x => x + 1, 0);\r\n\r\n  const [person, setPerson] = useState([]);\r\n  const [alertMsg, setAlertMsg] = useState('');\r\n  const [alertMsgVariant, setAlertMsgVariant] = useState('');\r\n\r\n  //=== Read Profile ===\r\n  const [showProfile, setShowProfile] = useState(false);\r\n  const showProfileModal = (person) => {\r\n    setAlertMsg('');\r\n    readPerson(person.id, onReadOk, onReadWarning, onReadError);\r\n  }\r\n  const hideProfileModal = () => {\r\n    setShowProfile(false);\r\n  }\r\n\r\n  const onReadError = (message) => {\r\n    setAlertMsgVariant('danger');\r\n    setAlertMsg(`READ PROFILE -- Error ${message}; please try again later`);\r\n  }\r\n  const onReadWarning = (message) => {\r\n    setAlertMsgVariant('warning');\r\n    setAlertMsg(`READ PROFILE -- ${message}`);\r\n  }\r\n  const onReadOk = (person) => {\r\n    setPerson(person);\r\n    setShowProfile(true);\r\n  }\r\n \r\n  //=== Update ===\r\n  const [showUpdate, setShowUpdate] = useState(false);\r\n  const showUpdateModal = (person) => {\r\n    setAlertMsg('');\r\n    setPerson(person);\r\n    setShowUpdate(true);\r\n  }\r\n  const hideUpdateModal = () => {\r\n    setShowUpdate(false);\r\n  }\r\n\r\n  //=== Delete ===\r\n  const [showDelete, setShowDelete] = useState(false);\r\n  const showDeleteModal = (person) => {\r\n    setAlertMsg('');\r\n    setPerson(person);\r\n    setShowDelete(true);\r\n  }\r\n  const hideDeleteModal = () => {\r\n    setShowDelete(false);\r\n  }\r\n  const onDeleteError = (message) => {\r\n    setAlertMsgVariant('danger');\r\n    setAlertMsg(`DELETE PERSON -- Error ${message}; please try again later`);\r\n  }\r\n  const onDeleteWarning = (message) => {\r\n    setAlertMsgVariant('warning');\r\n    setAlertMsg(`DELETE PERSON -- ${message}`);\r\n  }\r\n  const onSubmitDelete = (person_id) => {\r\n    setShowDelete(false);\r\n    deletePerson(person_id, refreshTable, onDeleteWarning, onDeleteError);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Container fluid className=\"content\">\r\n        <Header />\r\n        <div className=\"container\">\r\n          <PeopleHeader refreshTable={refreshTable} \r\n                        setAlertMsg={setAlertMsg} setAlertMsgVariant={setAlertMsgVariant} />\r\n          <AlertMsg message={alertMsg} variant={alertMsgVariant} />\r\n          <PeopleTable refreshTable={refreshTable} showProfileModal={showProfileModal} \r\n                       showUpdateModal={showUpdateModal} showDeleteModal={showDeleteModal} />\r\n        </div>\r\n\r\n        {/* Bootstrap modals (below) fail to be added to React portals by ReactDOM.createPortal().\r\n            So not using portals for them; letting them do their own thing. \r\n        */}\r\n\r\n        <DisplayPersonModal \r\n           show={showProfile} person={person} \r\n           onHide={hideProfileModal} refreshTable={refreshTable} \r\n        />\r\n        <PersonInfoModal\r\n          show={showUpdate} type={'UPDATE PROFILE'}\r\n          title=\"Update person\" submitBtnLabel=\"Update person\" id={person.id} \r\n          defaults={ {\"fname\":person.fname, \"lname\":person.lname, \"email\":person.username} } \r\n          onHide={hideUpdateModal} refreshTable={refreshTable} \r\n          setAlertMsgVariant={setAlertMsgVariant} setAlertMsg={setAlertMsg}\r\n        />\r\n        <DeletePersonModal \r\n          show={showDelete} person={person} \r\n          onHide={hideDeleteModal} refreshTable={refreshTable}\r\n          onSubmit={onSubmitDelete} \r\n        />\r\n      </Container>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}